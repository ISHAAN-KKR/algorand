{
  "version": 3,
  "sources": [
    "C:/Users/ikarm/Desktop/algorand-contract/projects/algorand-contract/smart_contracts/hello_world/contract.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIE;AAAgD;AAAhD;AACA;AAAiD;AAAjD;AACA;AAAkD;AAAlD;AAJF;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AAqBE;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AARF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAEE;AAAA;AAAA;AAAA;AAO0B;AAAxB;AAPF;AAOE;AAAA;;AANF;AAAA;AAAA;AAAA;AAU2B;AAAzB;AAVF;AAUE;AAAA;AATF;AAAA;AAAA;AAAA;AAU4B;AAA1B;AAVF;AAUE;AAAA;;AAXF;AAAA;AAAA;AAAA;AAeE;AAfF;AAmB0B;AAAxB;AAlBF;AAmB2B;AAAzB;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"totalVotes\" \"votersCount\" \"ideaCount\""
    },
    "40": {
      "op": "txn ApplicationID",
      "defined_out": [
        "reinterpret_bool%0#0"
      ],
      "stack_out": [
        "reinterpret_bool%0#0"
      ]
    },
    "42": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "45": {
      "op": "bytec_2 // \"ideaCount\"",
      "defined_out": [
        "\"ideaCount\""
      ],
      "stack_out": [
        "\"ideaCount\""
      ]
    },
    "46": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"ideaCount\"",
        "0"
      ],
      "stack_out": [
        "\"ideaCount\"",
        "0"
      ]
    },
    "47": {
      "op": "app_global_put",
      "stack_out": []
    },
    "48": {
      "op": "bytec_0 // \"totalVotes\"",
      "defined_out": [
        "\"totalVotes\""
      ],
      "stack_out": [
        "\"totalVotes\""
      ]
    },
    "49": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"totalVotes\"",
        "0"
      ]
    },
    "50": {
      "op": "app_global_put",
      "stack_out": []
    },
    "51": {
      "op": "bytec_1 // \"votersCount\"",
      "defined_out": [
        "\"votersCount\""
      ],
      "stack_out": [
        "\"votersCount\""
      ]
    },
    "52": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"votersCount\"",
        "0"
      ]
    },
    "53": {
      "op": "app_global_put",
      "stack_out": []
    },
    "54": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "56": {
      "op": "bz main_bare_routing@11",
      "stack_out": []
    },
    "59": {
      "op": "pushbytess 0x662d149d 0x3e65877d 0x58057560 0xdb47e418 // method \"addIdea()void\", method \"vote()void\", method \"getWinner()uint64\", method \"distributeReward()void\"",
      "defined_out": [
        "Method(addIdea()void)",
        "Method(distributeReward()void)",
        "Method(getWinner()uint64)",
        "Method(vote()void)"
      ],
      "stack_out": [
        "Method(addIdea()void)",
        "Method(vote()void)",
        "Method(getWinner()uint64)",
        "Method(distributeReward()void)"
      ]
    },
    "81": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(addIdea()void)",
        "Method(distributeReward()void)",
        "Method(getWinner()uint64)",
        "Method(vote()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(addIdea()void)",
        "Method(vote()void)",
        "Method(getWinner()uint64)",
        "Method(distributeReward()void)",
        "tmp%2#0"
      ]
    },
    "84": {
      "op": "match main_addIdea_route@5 main_vote_route@6 main_getWinner_route@7 main_distributeReward_route@8",
      "stack_out": []
    },
    "94": {
      "block": "main_after_if_else@15",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "95": {
      "op": "return",
      "stack_out": []
    },
    "96": {
      "block": "main_distributeReward_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "98": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "99": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "100": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "102": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "103": {
      "callsub": "smart_contracts/hello_world/contract.algo.ts::IdeaVotingApp.distributeReward",
      "op": "callsub distributeReward"
    },
    "106": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "107": {
      "op": "return",
      "stack_out": []
    },
    "108": {
      "block": "main_getWinner_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "110": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "111": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "112": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "114": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "115": {
      "callsub": "smart_contracts/hello_world/contract.algo.ts::IdeaVotingApp.getWinner",
      "op": "callsub getWinner",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "118": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "119": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "125": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "126": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "127": {
      "op": "log",
      "stack_out": []
    },
    "128": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "129": {
      "op": "return",
      "stack_out": []
    },
    "130": {
      "block": "main_vote_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "132": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "133": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "134": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "136": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "137": {
      "callsub": "smart_contracts/hello_world/contract.algo.ts::IdeaVotingApp.vote",
      "op": "callsub vote"
    },
    "140": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "141": {
      "op": "return",
      "stack_out": []
    },
    "142": {
      "block": "main_addIdea_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "144": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "145": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "146": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "148": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "149": {
      "callsub": "smart_contracts/hello_world/contract.algo.ts::IdeaVotingApp.addIdea",
      "op": "callsub addIdea"
    },
    "152": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "153": {
      "op": "return",
      "stack_out": []
    },
    "154": {
      "block": "main_bare_routing@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "156": {
      "op": "bnz main_after_if_else@15",
      "stack_out": []
    },
    "159": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "161": {
      "op": "!",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "162": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "163": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "164": {
      "op": "return",
      "stack_out": []
    },
    "165": {
      "subroutine": "smart_contracts/hello_world/contract.algo.ts::IdeaVotingApp.addIdea",
      "params": {},
      "block": "addIdea",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "166": {
      "op": "bytec_2 // \"ideaCount\"",
      "defined_out": [
        "\"ideaCount\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"ideaCount\""
      ]
    },
    "167": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "168": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "169": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "170": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "171": {
      "op": "bytec_2 // \"ideaCount\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"ideaCount\""
      ]
    },
    "172": {
      "op": "swap",
      "stack_out": [
        "\"ideaCount\"",
        "new_state_value%0#0"
      ]
    },
    "173": {
      "op": "app_global_put",
      "stack_out": []
    },
    "174": {
      "retsub": true,
      "op": "retsub"
    },
    "175": {
      "subroutine": "smart_contracts/hello_world/contract.algo.ts::IdeaVotingApp.vote",
      "params": {},
      "block": "vote",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "176": {
      "op": "bytec_0 // \"totalVotes\"",
      "defined_out": [
        "\"totalVotes\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"totalVotes\""
      ]
    },
    "177": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "178": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "179": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "180": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "181": {
      "op": "bytec_0 // \"totalVotes\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"totalVotes\""
      ]
    },
    "182": {
      "op": "swap",
      "stack_out": [
        "\"totalVotes\"",
        "new_state_value%0#0"
      ]
    },
    "183": {
      "op": "app_global_put",
      "stack_out": []
    },
    "184": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "185": {
      "op": "bytec_1 // \"votersCount\"",
      "defined_out": [
        "\"votersCount\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"votersCount\""
      ]
    },
    "186": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "187": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "188": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "189": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "190": {
      "op": "bytec_1 // \"votersCount\"",
      "stack_out": [
        "new_state_value%1#0",
        "\"votersCount\""
      ]
    },
    "191": {
      "op": "swap",
      "stack_out": [
        "\"votersCount\"",
        "new_state_value%1#0"
      ]
    },
    "192": {
      "op": "app_global_put",
      "stack_out": []
    },
    "193": {
      "retsub": true,
      "op": "retsub"
    },
    "194": {
      "subroutine": "smart_contracts/hello_world/contract.algo.ts::IdeaVotingApp.getWinner",
      "params": {},
      "block": "getWinner",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "195": {
      "op": "bytec_0 // \"totalVotes\"",
      "defined_out": [
        "\"totalVotes\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"totalVotes\""
      ]
    },
    "196": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "197": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "198": {
      "retsub": true,
      "op": "retsub"
    },
    "199": {
      "subroutine": "smart_contracts/hello_world/contract.algo.ts::IdeaVotingApp.distributeReward",
      "params": {},
      "block": "distributeReward",
      "stack_in": [],
      "op": "bytec_0 // \"totalVotes\"",
      "defined_out": [
        "\"totalVotes\""
      ],
      "stack_out": [
        "\"totalVotes\""
      ]
    },
    "200": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"totalVotes\"",
        "0"
      ],
      "stack_out": [
        "\"totalVotes\"",
        "0"
      ]
    },
    "201": {
      "op": "app_global_put",
      "stack_out": []
    },
    "202": {
      "op": "bytec_1 // \"votersCount\"",
      "defined_out": [
        "\"votersCount\""
      ],
      "stack_out": [
        "\"votersCount\""
      ]
    },
    "203": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"votersCount\"",
        "0"
      ]
    },
    "204": {
      "op": "app_global_put",
      "stack_out": []
    },
    "205": {
      "retsub": true,
      "op": "retsub"
    }
  }
}